import{e as t,o as b,c as p,a,h as e,v as c,b as v,w as n,T as o,F as r,f as u,p as _,d as h}from"./index-2e4f8d1f.js";import{_ as w}from"./_plugin-vue_export-helper-c27b6911.js";const l=d=>(_("data-v-fdc401be"),d=d(),h(),d),m=u('<section data-v-fdc401be><div class="leftNav" data-v-fdc401be><div class="leftNavContainer" data-v-fdc401be><div class="leftNavLayout" data-v-fdc401be><br data-v-fdc401be><div class="leftNavText" data-v-fdc401be></div><div class="leftNavText" data-v-fdc401be></div><div class="leftNavText" data-v-fdc401be></div><div class="leftNavText" data-v-fdc401be></div></div></div></div><div class="Main" data-v-fdc401be><div class="mainContainer" data-v-fdc401be><div class="mainLayout" data-v-fdc401be><div id="" class="articleCardTitle cor36" data-v-fdc401be>[ CSS ] ≫ 樣式的順序</div><p data-v-fdc401be>有如下代碼，請問HTML代碼中&quot;文本&quot;最終渲染出的顏色分別是？</p><br data-v-fdc401be><div class="bgcVS" data-v-fdc401be><div data-v-fdc401be><span class="then" data-v-fdc401be>＜</span> <span class="number" data-v-fdc401be>div </span><span class="function" data-v-fdc401be>class </span> <span class="then" data-v-fdc401be>=&quot;</span><span class="word" data-v-fdc401be>red</span> <span class="word" data-v-fdc401be>blue</span><span class="word" data-v-fdc401be>&quot;&gt;</span> <span class="word" data-v-fdc401be>文本</span><span class="then" data-v-fdc401be>＜/</span> <span class="number" data-v-fdc401be>div </span><span class="then" data-v-fdc401be>&gt;</span></div><div data-v-fdc401be><span class="then" data-v-fdc401be>＜</span> <span class="number" data-v-fdc401be>div </span><span class="function" data-v-fdc401be>class </span> <span class="then" data-v-fdc401be>=&quot;</span><span class="word" data-v-fdc401be>blue</span> <span class="word" data-v-fdc401be>red</span><span class="word" data-v-fdc401be>&quot;&gt;</span> <span class="word" data-v-fdc401be>文本</span><span class="then" data-v-fdc401be>＜/</span> <span class="number" data-v-fdc401be>div </span><span class="then" data-v-fdc401be>&gt;</span></div><div class="brackets" data-v-fdc401be>.red { color: red; }</div><div class="brackets" data-v-fdc401be>.blue { color: blue; }</div></div><br data-v-fdc401be><br data-v-fdc401be><p data-v-fdc401be>兩個都是藍色。</p><br data-v-fdc401be><p data-v-fdc401be> 為什麼？CSS的層疊規則裡有一條叫做「後來居上原則」，即兩個相同權值的樣式，如存在相同的聲明屬性，則後者獲勝。 本題的CSS樣式裡，.blue 和 .red 權值相同，且都聲明了 color 屬性，但 .blue 在樣式表中位於 .red 後面的位置，所以當HTML中的同一標籤同時引用這兩個類名時，以 .blue 的 color 聲明為準，和HTML中的 className 的先後順序無關。 </p><br data-v-fdc401be><br data-v-fdc401be><p class="cor36" data-v-fdc401be></p><p data-v-fdc401be></p><br data-v-fdc401be><br data-v-fdc401be></div></div></div></section>',1),T=l(()=>a("div",{class:"toTopButton"},[a("div",{class:"disCen"},"___"),a("div",{class:"disCen"},"▲")],-1)),C=[T],S=l(()=>a("div",{class:"toBotButton"},[a("div",{class:"disCen"},"▼"),a("div",{class:"disCen"},"￣")],-1)),N=[S],g={__name:"CssPageTwo",setup(d){const s=t(!1);window.addEventListener("scroll",function(){s.value=window.scrollY>0});function i(){window.scrollTo({top:0,left:0,behavior:"smooth"})}function f(){window.scrollTo({top:999999,left:0,behavior:"smooth"})}return t(!0),(x,B)=>(b(),p(r,null,[m,a("div",null,[e(v(o,{name:"fade",tag:"div"},{default:n(()=>[a("div",{onClick:i,class:"toTop"},C)]),_:1},512),[[c,s.value]]),e(v(o,{name:"fade",tag:"div"},{default:n(()=>[a("div",{onClick:f,class:"toBot"},N)]),_:1},512),[[c,s.value]])])],64))}},L=w(g,[["__scopeId","data-v-fdc401be"]]);export{L as default};
