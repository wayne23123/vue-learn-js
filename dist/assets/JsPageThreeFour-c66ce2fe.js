import{e as k,r as m,o as h,c as q,a,b as f,w as l,i as g,h as e,v as o,T as i,F as z,f as v,p as T,d as S}from"./index-2e4f8d1f.js";import{_ as V}from"./_plugin-vue_export-helper-c27b6911.js";const n=p=>(T("data-v-99d0faad"),p=p(),S(),p),L={class:"leftNav"},y={class:"leftNavContainer"},C={class:"leftNavLayout"},j=n(()=>a("div",null,"for in",-1)),x=n(()=>a("div",null,"for of",-1)),P=[j,x],_=n(()=>a("div",null,".every()",-1)),N=n(()=>a("div",null,".some()",-1)),$=[_,N],E={class:"Main"},O={class:"mainContainer"},A={class:"mainLayout"},I=v('<br data-v-99d0faad><br data-v-99d0faad><div class="fz28" data-v-99d0faad><span class="cor17" data-v-99d0faad> . . . . . </span> shift ↖ <span class="cor17" data-v-99d0faad> . . . </span> ↗ pop </div><div class="fz28" data-v-99d0faad>unshift → ▯▮▮▮▯ ← push</div><br data-v-99d0faad><table class="fz28" data-v-99d0faad><tr data-v-99d0faad><td data-v-99d0faad>🐕🐕🐕🐕.map(🐕=&gt;🐶)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>🐶🐶🐶🐶</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐕🐶.filter(🐶)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>🐶🐶</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐕🐕.find(🐶)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>🐶</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐕🥤.at( -1 )</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>🥤</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐕🥤.includes(🥤)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>true</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐕🐕.every(🐕)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>false</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐶🐶🐕.some(🐶)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>true</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐕🐕🐕.fill(🐶,1)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>🐕🐶🐶🐶</td></tr><tr data-v-99d0faad><td data-v-99d0faad>🐕🐕🐶🐕.findIndex.(el=&gt;el===🐶)</td><td class="pad10" data-v-99d0faad>&gt;</td><td data-v-99d0faad>2</td></tr></table><br data-v-99d0faad><br data-v-99d0faad><p class="fz28" data-v-99d0faad> 會改原陣列: push.pop.unshift.shift() . sort() .reverse() .splice() </p><br data-v-99d0faad><br data-v-99d0faad><table class="fz30 methodTable" data-v-99d0faad><tr class="cor36" data-v-99d0faad><th data-v-99d0faad>方法</th><th data-v-99d0faad>作用</th><th data-v-99d0faad>說明</th></tr><tr data-v-99d0faad><td data-v-99d0faad>map</td><td data-v-99d0faad>迭代數組</td><td data-v-99d0faad><span class="cor36" data-v-99d0faad>返回</span> 新數組, <span class="cor36" data-v-99d0faad>返回</span>的是處理之後的數組元素, 想要使用返回的新數組 </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>forEach</td><td class="tdPad" data-v-99d0faad>遍歷數組</td><td class="tdPad" data-v-99d0faad>不返回數組, 常用於查找遍歷數組元素</td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>filter</td><td class="tdPad" data-v-99d0faad>過濾數組</td><td class="tdPad" data-v-99d0faad><span class="cor36" data-v-99d0faad>返回</span>新數組, <span class="cor36" data-v-99d0faad>返回</span>的是篩選滿足條件的數組元素 </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>reduce</td><td class="tdPad" data-v-99d0faad>累計器</td><td class="tdPad" data-v-99d0faad><span class="cor36" data-v-99d0faad>返回</span>累計處理的結果, 常用於求和 </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>join</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad> 數組拼接成字串, <span class="cor36" data-v-99d0faad>返回</span> 字串 </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>find</td><td class="tdPad" data-v-99d0faad>查找元素</td><td class="tdPad" data-v-99d0faad><span class="cor36" data-v-99d0faad>返回</span>符合條件的第一個數組元素值, 沒有則<span class="cor36" data-v-99d0faad>返回</span>undefined </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>every</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad> 數組所有元素是否都符合條件, 所有都符合<span class="cor36" data-v-99d0faad>返回</span>true, 否<span class="cor36" data-v-99d0faad>返回</span>false </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>some</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad> 數組中的元素是否有滿足條件的, 如果有<span class="cor36" data-v-99d0faad>返回</span>true, 沒有<span class="cor36" data-v-99d0faad>返回</span>false </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>concat</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad> 合併 2 個數組, <span class="cor36" data-v-99d0faad>返回</span>生成新數組 </td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>sort</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad>對原數組單元值排序</td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>splice</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad>刪除或替換原數組單元</td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>reverse</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad>反轉數組</td></tr><tr data-v-99d0faad><td class="tdPad" data-v-99d0faad>findIndex</td><td class="tdPad" data-v-99d0faad></td><td class="tdPad" data-v-99d0faad>查找元素的索引值</td></tr></table><div id="threemethod001" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. push() . . . 會改變原數組 </div><p class="fz28" data-v-99d0faad> push 方法 在 數組末端 添加 一個or多個 元素 , 並返回添加新元素後的數組長度 </p><p class="fz28" data-v-99d0faad>注意 會改變原數組</p><br data-v-99d0faad><div class="fz28" data-v-99d0faad><span class="cor17" data-v-99d0faad> . . . . . </span> shift ↖ <span class="cor17" data-v-99d0faad> . . . </span> ↗ pop </div><div class="fz28" data-v-99d0faad>unshift → ▯▮▮▮▯ ← push</div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;hi&quot;</span> <span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>//arr[1]=&quot;添加方法1&quot;</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.push</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;大家好&quot;</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span><span class="word" data-v-99d0faad>arrLength</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.push</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;大家好&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//打印添加這個東西,返回數組長度//2</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[&quot;hi&quot;,&quot;大家好&quot;]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arrLength</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>// 2</span></div><br data-v-99d0faad><p data-v-99d0faad>也可以同時添加多條</p><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.push</span><span class="brackets" data-v-99d0faad>(</span><span class="src" data-v-99d0faad>&quot;大家好&quot;,123,&quot;hi&quot;</span><span class="brackets" data-v-99d0faad>)</span></div></div><div id="threemethod002" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. pop() . . . 會改變原數組 </div><p class="fz28" data-v-99d0faad>push 方法 刪除數組的最後一個元素 , 並返回該元素</p><p class="fz28" data-v-99d0faad>注意 會改變原數組</p><br data-v-99d0faad><div class="fz28" data-v-99d0faad><span class="cor17" data-v-99d0faad> . . . . . </span> shift ↖ <span class="cor17" data-v-99d0faad> . . . </span> ↗ pop </div><div class="fz28" data-v-99d0faad>unshift → ▯▮▮▮▯ ← push</div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>100,200,300,400</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.pop</span><span class="brackets" data-v-99d0faad>()</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[100,200,300]</span></div></div><div id="threemethod003" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. shift() . . . 會改變原數組 </div><p class="fz28" data-v-99d0faad>shift 方法 刪除數組的第一個元素 , 並返回該元素</p><p class="fz28" data-v-99d0faad>注意 會改變原數組</p><br data-v-99d0faad><div class="fz28" data-v-99d0faad><span class="cor17" data-v-99d0faad> . . . . . </span> shift ↖ <span class="cor17" data-v-99d0faad> . . . </span> ↗ pop </div><div class="fz28" data-v-99d0faad>unshift → ▯▮▮▮▯ ← push</div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>name</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;wayne&quot;,&quot;neo&quot;,&quot;jack&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span><span class="word" data-v-99d0faad>result</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>name</span><span class="variable" data-v-99d0faad>.shift</span><span class="brackets" data-v-99d0faad>()</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>name</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[&quot;neo&quot;,&quot;jack&quot;]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>result</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//wayne</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>//清空數組元素</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.shift</span><span class="brackets" data-v-99d0faad>())</span><span class="comment" data-v-99d0faad>//undefined</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr1</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>100,200,300</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>item</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>//()裡面取布林值,當0,undefined,Null,NaN,空數值,false為false</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>while</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr1</span><span class="variable" data-v-99d0faad>.shift</span><span class="brackets" data-v-99d0faad>()){</span><span class="comment" data-v-99d0faad>//我把arr1每次刪除的數據賦值給item</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//100//200//300//[]</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div></div><div id="threemethod004" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. unshift() . . . 會改變原數組 </div><p class="fz28" data-v-99d0faad> shift 方法 向 數組的第一個位置 添加元素 , 並返回添加元素後的 數組長度 </p><p class="fz28" data-v-99d0faad>注意 會改變原數組</p><br data-v-99d0faad><div class="fz28" data-v-99d0faad><span class="cor17" data-v-99d0faad> . . . . . </span> shift ↖ <span class="cor17" data-v-99d0faad> . . . </span> ↗ pop </div><div class="fz28" data-v-99d0faad>unshift → ▯▮▮▮▯ ← push</div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>200</span> <span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.unshift</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>100</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[100,200]</span></div><br data-v-99d0faad><p data-v-99d0faad>也可以添加多個</p></div><div id="threemethod017" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. for in , for of </div><p class="fz28" data-v-99d0faad> for of 循環獲取到的是一對鍵值對中的值 , 也就是 value </p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>而 for in 獲取的是鍵名 , 也就是 key</p><br data-v-99d0faad><br data-v-99d0faad><p class="fz28" data-v-99d0faad>對數組 for of 返回的是 數組裡面的 元素值</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>for in 返回 key , 指每個元素的 索引值</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad> for of 只能遍歷其底層帶有 iterator 接口的 數據結構 像 set map string array </p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>物件沒有原生 iterator 接口 , 直接用 for of 會報錯</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>開發中 遍歷用 for in 更合適</p><br data-v-99d0faad><br data-v-99d0faad><p class="fz28" data-v-99d0faad>for in 返回 數組元素的 索引值 , 而不是 元素</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>而且 遍歷順序 有可能不是按照 實際數據的 內部順序</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>所以 通常遍歷數組用 for of</p><br data-v-99d0faad><br data-v-99d0faad><p class="fz28" data-v-99d0faad>總之 for in 適合遍歷 物件</p><p class="fz28" data-v-99d0faad>for of 適合遍歷 數組</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// 1. 循環數組</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>cosnt</span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for...in 輸出 數組成員 在數組中 的索引</span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>n </span><span class="function" data-v-99d0faad>in </span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>n </span><span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 0 // 1 // 2 // 3</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for...of 輸出 數組的成員</span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>n </span><span class="function" data-v-99d0faad>of </span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>n </span><span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// a // b // c // d</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// 2. 循環物件</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>obj</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>{</span> <span class="word" data-v-99d0faad>n:</span><span class="number" data-v-99d0faad>4,</span> <span class="word" data-v-99d0faad>m:</span><span class="number" data-v-99d0faad>5,</span> <span class="word" data-v-99d0faad>k:</span><span class="number" data-v-99d0faad>6</span> <span class="brackets" data-v-99d0faad>}</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for...in </span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>n </span><span class="function" data-v-99d0faad>in </span> <span class="word" data-v-99d0faad>obj</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="comment" data-v-99d0faad>// 物件的屬性名</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>n</span><span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// n // m // k</span><div data-v-99d0faad></div></div><div class="padTwo VSL" data-v-99d0faad><span class="comment" data-v-99d0faad>// 物件的屬性值</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>obj</span> <span class="brackets" data-v-99d0faad>[</span><span class="word" data-v-99d0faad>n</span> <span class="brackets" data-v-99d0faad>])</span><span class="comment" data-v-99d0faad>// 4 // 5 // 6</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for...of </span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>n </span><span class="function" data-v-99d0faad>of </span> <span class="word" data-v-99d0faad>obj</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// 報錯 , 不能循環</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>// 因為沒有 iterator 接口</span></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>// 3. 循環數組物件</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arrObj</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[{</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;wayne&quot;,</span><div data-v-99d0faad></div></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>1</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}, {</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;jack&quot;,</span><div data-v-99d0faad></div></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>9</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}]</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>nObj </span><span class="function" data-v-99d0faad>of </span><span class="word" data-v-99d0faad>arrObj</span> <span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>nObj</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//{name:&quot;wayne&quot;,number:1},{name:&quot;jack&quot;,number:9}</span></div><div class="padTwo VSL" data-v-99d0faad><span class="then" data-v-99d0faad>for </span> <span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>n </span><span class="function" data-v-99d0faad>in </span> <span class="word" data-v-99d0faad>nObj</span><span class="brackets" data-v-99d0faad>){</span><div data-v-99d0faad><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>nObj</span><span class="brackets" data-v-99d0faad>[</span> <span class="word" data-v-99d0faad>n</span><span class="brackets" data-v-99d0faad>]) </span><span class="comment" data-v-99d0faad>// wayne // 1 // jack // 9</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for in 循環 物件</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>// for of 循環 數組</span></div></div><br data-v-99d0faad><br data-v-99d0faad><div id="threemethod005" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. map() </div><p class="fz28" data-v-99d0faad> map 可以遍歷數組 處理數據 , 並 <span class="spo pad10 cor36" data-v-99d0faad> 返回 新數組 </span><span class="cor36" data-v-99d0faad>不影響原數組</span></p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>map([🐮,🥔,🐔,🌽] , cook) =&gt; [🍔,🍟,🍗,🍿]</p>',73),B={class:"bgcVS"},F=v('<div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數 </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>當前數組元素,當前元素索引號,數組本身</span><span class="brackets" data-v-99d0faad>){</span></div><div class="comment pTwo" data-v-99d0faad>//函數體</div><div class="brackets" data-v-99d0faad>} , thisValue )</div><br data-v-99d0faad><p data-v-99d0faad>計算結果 一定要返回 , 否則新數組會 undefined</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span> <span class="src" data-v-99d0faad>&quot;red&quot;</span><span class="then" data-v-99d0faad>,</span> <span class="src" data-v-99d0faad>&quot;blue&quot;</span><span class="then" data-v-99d0faad>,</span> <span class="src" data-v-99d0faad>&quot;pink&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>ele,index</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console</span> <span class="word" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>ele</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//red//blue//pink//數組元素</span><span class="word" data-v-99d0faad></span><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="word" data-v-99d0faad>.log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>index</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//0//1//2//索引號</span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>el</span><span class="then" data-v-99d0faad>+</span> <span class="src" data-v-99d0faad>&quot;顏色&quot;</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><br data-v-99d0faad>',11),M=v('<br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>newArr</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>ele,index</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console</span> <span class="word" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>ele</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//red//blue//pink//數組元素</span><span class="word" data-v-99d0faad></span><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="word" data-v-99d0faad>.log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>index</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//0//1//2//索引號</span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>el</span><span class="then" data-v-99d0faad>+</span> <span class="src" data-v-99d0faad>&quot;顏色&quot;</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>newArr</span><span class="brackets" data-v-99d0faad>)</span></div>',5),D=v('<p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><div id="threemethod006" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. forEach() </div><p class="fz28" data-v-99d0faad> forEach() 方法用於調用數組的每個元素, 並將元素傳遞給回調函數 </p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>適合用來遍歷數組對象</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>1.裡面幾個參數 2. 返回值返回什麼 3. 使用方法</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數 </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>當前數組元素 , 當前元素索引號 , 數組本身</span><span class="brackets" data-v-99d0faad>) {</span></div><div class="comment pTwo" data-v-99d0faad>//函數體</div><div class="brackets" data-v-99d0faad>}, thisValue )</div><br data-v-99d0faad><div class="number" data-v-99d0faad> 只遍歷 , 不返回值 , 加 return 返回 undefined </div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;wayne&quot;,&quot;neo&quot;,&quot;jack&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// wayne neo jack</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>index</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 0 1 2</span></div><div class="brackets" data-v-99d0faad>})</div><br data-v-99d0faad><div class="number" data-v-99d0faad>和 map 差在 他不返回數組</div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>result</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// wayne neo jack</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>index</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 0 1 2</span></div><div class="brackets" data-v-99d0faad>})</div><div class="" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>result</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// undefined</span></div><br data-v-99d0faad><br data-v-99d0faad><p data-v-99d0faad>練習 假設 3 個 button 添加 點擊 事件</p><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>buttons</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>document</span><span class="variable" data-v-99d0faad>.querySelectorAll</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;.btn&quot;</span><span class="brackets" data-v-99d0faad>);</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>buttons</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>button</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>button</span><span class="variable" data-v-99d0faad>.addEventListener</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;click&quot;</span><span class="then" data-v-99d0faad>,</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(){</span><div data-v-99d0faad></div><div class="padTwo VSL" data-v-99d0faad><span class="comment" data-v-99d0faad>//...</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><br data-v-99d0faad><br data-v-99d0faad><p data-v-99d0faad>練習 渲染 ul 列表</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>list</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[{</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>id:</span> <span class="src" data-v-99d0faad>&quot;0001&quot;,</span><div data-v-99d0faad><span class="word" data-v-99d0faad>mame:</span> <span class="src" data-v-99d0faad>&quot;wayne&quot;</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>},{</span></div><span class="word" data-v-99d0faad>id:</span> <span class="src" data-v-99d0faad>&quot;0002&quot;,</span><div data-v-99d0faad><span class="word" data-v-99d0faad>mame:</span> <span class="src" data-v-99d0faad>&quot;jack&quot;</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>},{</span></div><span class="word" data-v-99d0faad>id:</span> <span class="src" data-v-99d0faad>&quot;0003&quot;,</span><div data-v-99d0faad><span class="word" data-v-99d0faad>mame:</span> <span class="src" data-v-99d0faad>&quot;neo&quot;</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>}]</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>＜</span> <span class="number" data-v-99d0faad>div </span><span class="function" data-v-99d0faad>class </span> <span class="then" data-v-99d0faad>=</span><span class="src" data-v-99d0faad>&quot;list&quot;</span> <span class="then" data-v-99d0faad>&gt;＜/ </span><span class="number" data-v-99d0faad>div </span> <span class="then" data-v-99d0faad>&gt;</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>str</span><span class="then" data-v-99d0faad>=</span> <span class="src" data-v-99d0faad>&quot;&quot;</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>list</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span> <span class="brackets" data-v-99d0faad>{</span></div><div class="padTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console</span> <span class="word" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//每一個數組元素-&gt;物件</span><div data-v-99d0faad><span class="word" data-v-99d0faad>str</span> <span class="then" data-v-99d0faad>+=</span><span class="src" data-v-99d0faad>` ＜p&gt;</span><span class="then" data-v-99d0faad>${</span><span class="word" data-v-99d0faad>item.name</span> <span class="then" data-v-99d0faad>}</span><span class="src" data-v-99d0faad>＜/p&gt;`</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>document</span><span class="variable" data-v-99d0faad>.querySelector</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;.list&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.innerHTML</span><span class="then" data-v-99d0faad>=</span> <span class="word" data-v-99d0faad>str</span></div><br data-v-99d0faad><p data-v-99d0faad>改成 解構賦值</p><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>list</span><span class="variable" data-v-99d0faad>.forEach</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span> <span class="brackets" data-v-99d0faad>{</span></div><div class="padTwo VSL" data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="brackets" data-v-99d0faad>{</span> <span class="word" data-v-99d0faad>name</span><span class="brackets" data-v-99d0faad>}</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>item</span><div data-v-99d0faad><span class="word" data-v-99d0faad>str</span> <span class="then" data-v-99d0faad>+=</span><span class="src" data-v-99d0faad>` ＜p&gt;</span><span class="then" data-v-99d0faad>${</span><span class="word" data-v-99d0faad>name</span> <span class="then" data-v-99d0faad>}</span><span class="src" data-v-99d0faad>＜/p&gt;`</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div></div><p class="fz28" data-v-99d0faad>1. forEach 主要是遍歷數組</p><p class="fz28" data-v-99d0faad>2. 索引號可以不寫</p><div id="threemethod016" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. filter() </div><p class="fz28" data-v-99d0faad><span class="cor36" data-v-99d0faad>返回</span> 一個符合條件 的 新陣列 <span class="cor17" data-v-99d0faad>. . . </span><span class="cor36" data-v-99d0faad>不影響 原陣列</span></p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>🐕🐶🐕🐶.filter(🐶) &gt; 🐶🐶</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.filter</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>當前數組的值 , 索引值 , 陣列本身 </span><span class="brackets" data-v-99d0faad>)</span> <span class="then" data-v-99d0faad>,</span><span class="word" data-v-99d0faad>thisValue</span> <span class="word" data-v-99d0faad></span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><p data-v-99d0faad>不給 thisValue 則 指向 全局變量</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,1,6,7,8,1,2</span><span class="brackets" data-v-99d0faad>]</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="variable" data-v-99d0faad>filter</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.filter</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>age</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>age</span><span class="then" data-v-99d0faad>&gt;=</span> <span class="number" data-v-99d0faad>18;</span><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span><span class="variable" data-v-99d0faad>filter</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>//過濾奇數</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.filter</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){</span></div><div class="padTwo VSL" data-v-99d0faad><span class="function" data-v-99d0faad>let </span><span class="word" data-v-99d0faad>result</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>item</span> <span class="then" data-v-99d0faad>%</span><span class="number" data-v-99d0faad>2</span> <span class="then" data-v-99d0faad>!==</span><span class="number" data-v-99d0faad>0</span><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="word" data-v-99d0faad>result</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>//數組去重</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.filter</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index,self</span><span class="brackets" data-v-99d0faad>)</span></div><div class="padTwo VSL" data-v-99d0faad><span class="function" data-v-99d0faad>let </span><span class="word" data-v-99d0faad>newIndex</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>self</span><span class="variable" data-v-99d0faad>.indexOf</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>current</span><span class="brackets" data-v-99d0faad>)</span><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="word" data-v-99d0faad>newIndex</span><span class="then" data-v-99d0faad>===</span> <span class="word" data-v-99d0faad>index</span></div><div data-v-99d0faad></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span></div><div class="comment" data-v-99d0faad>//item newIndex index =&gt; 取出</div><div class="comment" data-v-99d0faad>// 1 0 0 =&gt; 1</div><div class="comment" data-v-99d0faad>// 2 1 1 =&gt; 2</div><div class="comment" data-v-99d0faad>// 1 0 3 !=&gt; 不輸出</div></div><div id="threemethod007" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. join() </div><p class="fz28" data-v-99d0faad>用於把 數組中的 所有元素 轉換一個字串</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span> <span class="src" data-v-99d0faad>&quot;red&quot;</span><span class="then" data-v-99d0faad>,</span> <span class="src" data-v-99d0faad>&quot;blue&quot;</span><span class="then" data-v-99d0faad>,</span> <span class="src" data-v-99d0faad>&quot;pink&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr.join</span><span class="brackets" data-v-99d0faad>())</span><span class="comment" data-v-99d0faad>//小括號為空,則逗號分割</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;&quot;</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//redbluepink</span></div></div><div id="threemethod008" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. reduce </div><p class="fz28" data-v-99d0faad>reduce 返回累計處理的結果, 常用於求和</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="commsnt" data-v-99d0faad>1.裡面幾個參數 2. 返回值返回什麼 3. 使用方法</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數 </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>上一次累加器返回值,執行累加器當前元素值,當前數組索引,數組本身</span><span class="brackets" data-v-99d0faad>){},</span><span class="word" data-v-99d0faad>初始值</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span> <span class="number" data-v-99d0faad>1,5,8</span><span class="brackets" data-v-99d0faad>]</span></div><br data-v-99d0faad><div class="comment" data-v-99d0faad>//1.沒初始值 , 以數組第 1 個值 來運算</div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>prev,current</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>prev</span><span class="then" data-v-99d0faad>+</span> <span class="word" data-v-99d0faad>current</span></div><div class="brackets" data-v-99d0faad>})</div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>total</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 14</span></div><br data-v-99d0faad><div class="comment" data-v-99d0faad> //2.有初始值 , 第 1 個值 用你傳的初始值 來運算 </div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>prev,current</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>prev</span><span class="then" data-v-99d0faad>+</span> <span class="word" data-v-99d0faad>current</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>},</span> <span class="number" data-v-99d0faad>10</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>total</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 24</span></div><br data-v-99d0faad><div class="comment" data-v-99d0faad>//3.匿名函數</div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>total</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>((</span><span class="word" data-v-99d0faad>prev,current</span><span class="brackets" data-v-99d0faad>)</span> <span class="function" data-v-99d0faad>=&gt;</span><span class="word" data-v-99d0faad>prev</span> <span class="then" data-v-99d0faad>+</span><span class="word" data-v-99d0faad>current,</span> <span class="number" data-v-99d0faad>10</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>total</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 24</span></div></div><p class="fz28" data-v-99d0faad>reduce 執行過程</p><p class="fz28" data-v-99d0faad> 1. 如果 沒有 起始值 , 則 上一次值 以 數組的 第一個 數組元素 的值 </p><p class="fz28" data-v-99d0faad> 2. 每一次循環 , 把返回值 做為 下一次循環的 上一次值 </p><p class="fz28" data-v-99d0faad>3. 如果 有 起始值, 則 起始值 做為 上一次值</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[{</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;wayne&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>1000</span></div><div class="brackets" data-v-99d0faad>}, {</div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;neo&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>2000</span></div><div class="brackets" data-v-99d0faad>}, {</div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;jack&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>3000</span></div><div class="brackets" data-v-99d0faad>} ]</div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>total</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>((</span><span class="word" data-v-99d0faad>prev,current</span><span class="brackets" data-v-99d0faad>)</span> <span class="function" data-v-99d0faad>=&gt;</span><span class="brackets" data-v-99d0faad>{</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>prev</span><span class="then" data-v-99d0faad>+</span><span class="word" data-v-99d0faad>current.number</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>},</span> <span class="number" data-v-99d0faad>0</span><span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 不寫出使值則以數組第一個元素{}為初始值</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>total</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// 6000</span></div><br data-v-99d0faad><p data-v-99d0faad>數字 + 30% 怎麼改?</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>total</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.reduce</span><span class="brackets" data-v-99d0faad>((</span><span class="word" data-v-99d0faad>prev,current</span><span class="brackets" data-v-99d0faad>)</span> <span class="function" data-v-99d0faad>=&gt;</span><span class="word" data-v-99d0faad>prev</span><span class="then" data-v-99d0faad>+</span><span class="word" data-v-99d0faad>current.number </span><span class="then" data-v-99d0faad>* </span><span class="number" data-v-99d0faad>1.3 , 0</span><span class="brackets" data-v-99d0faad>) </span></div></div><div id="threemethod009" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. find </div><p class="fz28" data-v-99d0faad> 查找陣列裡 , 第一個滿足條件的值 , 並把它 <span class="cor36" data-v-99d0faad>返回</span></p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>🐕🐶🐕🐕.find(🐶) &gt; 🐶</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>1.裡面幾個參數 2. 返回值返回什麼 3. 使用方法</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.find</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index,arr</span><span class="brackets" data-v-99d0faad>)</span> <span class="then" data-v-99d0faad>,</span><span class="word" data-v-99d0faad>thisArgs</span> <span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad> # <div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;wayne&quot;,&quot;neo&quot;,&quot;jack&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>re </span> <span class="then" data-v-99d0faad>= </span><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.find</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>return </span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>===</span> <span class="src" data-v-99d0faad>&quot;wayne&quot;</span></div><div class="brackets" data-v-99d0faad>})</div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>re</span> <span class="brackets" data-v-99d0faad>); </span><span class="comment" data-v-99d0faad>// wayne</span></div><br data-v-99d0faad><br data-v-99d0faad><p data-v-99d0faad>物件中 , 我只想要 wayne 的物件 怎麼做?</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>= </span><span class="brackets" data-v-99d0faad>[ {</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;wayne&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>1000</span></div><div class="brackets" data-v-99d0faad>}, {</div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;neo&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>2000</span></div><div class="brackets" data-v-99d0faad>}, {</div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>name:</span> <span class="src" data-v-99d0faad>&quot;jack&quot;</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>number:</span> <span class="number" data-v-99d0faad>3000</span></div><div class="brackets" data-v-99d0faad>} ]</div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr.</span> <span class="variable" data-v-99d0faad>find</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//{name:&quot;wayne&quot;,number:1000},{...}</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item.name</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//wayne neo jack</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="number" data-v-99d0faad>1</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//打印1次//找到數組中第一個滿足就不再找了</span></div><div class="pTwo VSL" data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="word" data-v-99d0faad>item.name</span> <span class="then" data-v-99d0faad>===</span><span class="src" data-v-99d0faad>&quot;wayne&quot;</span><span class="comment" data-v-99d0faad>//返回這條物件 數組元素</span></div><div class="brackets" data-v-99d0faad>})</div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span> <span class="word" data-v-99d0faad>mi</span><span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr.</span> <span class="variable" data-v-99d0faad>find</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="word" data-v-99d0faad>item.name</span> <span class="then" data-v-99d0faad>===</span><span class="src" data-v-99d0faad>&quot;wayne&quot;</span><span class="comment" data-v-99d0faad>//返回這條物件 數組元素</span></div><div class="brackets" data-v-99d0faad>})</div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>mi</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//{name:&quot;wayne&quot;,number:1000}</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span> <span class="word" data-v-99d0faad>mi</span><span class="then" data-v-99d0faad>=</span> <span class="word" data-v-99d0faad>arr.</span><span class="variable" data-v-99d0faad>find</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span><span class="word" data-v-99d0faad>item.name</span> <span class="then" data-v-99d0faad>===</span><span class="src" data-v-99d0faad>&quot;wayne&quot;</span> <span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>mi</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//{name:&quot;wayne&quot;,number:1000}</span></div></div><div id="threemethod010" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. slice </div><p class="fz28" data-v-99d0faad>用來擷取片段 , 數組 或 字串 擷取一部分</p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>不會修改原數組</p><br data-v-99d0faad><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span><span class="number" data-v-99d0faad>2個參數可選</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>擷取時起始位置,終止位置</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,3,4,5</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>str</span><span class="then" data-v-99d0faad>=</span> <span class="src" data-v-99d0faad>&quot;12345&quot;</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>//沒參數,直接把原數組or原字串整個拷貝成新數組並返回</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>()) </span><span class="comment" data-v-99d0faad>//[1,2,3,4,5]</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>1</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[2,3,4,5]//1當起始位置,數組末最終</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>-1</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[5]//從最後一項倒數,-1是5</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>1,2</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[2]//包括起始位置下標,不包括終止位置下標</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>-5,-1</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[1,2,3,4]</span><span class="word" data-v-99d0faad></span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>str</span><span class="variable" data-v-99d0faad>.slice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>-5,-1</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//1234</span> <span class="word" data-v-99d0faad></span></div></div><div id="threemethod011" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. splice </div><p class="fz28" data-v-99d0faad> 能刪改數組 , 會返回由 刪除元素 組成的 數組 , 沒刪返回 空數組 </p><p class="fz28" data-v-99d0faad>注意 會修改原數組</p><br data-v-99d0faad><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span><span class="number" data-v-99d0faad>3 個參數可選</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>起始位置, 需要刪除元素的個數, 插入的值 </span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,3,4,5,6,7,8</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>())</span><span class="comment" data-v-99d0faad>//[1,2,3,4,5,6,7,8]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>()) </span><div data-v-99d0faad><span class="comment" data-v-99d0faad>//[] //返回由刪除元素組成的數組(沒刪返回空數組)</span></div></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>-2</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[7,8]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>4</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[5,6,7,8]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[1,2,3,4]</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr2</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,3,4,5,6,7,8</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>//console.log(arr2.splice(0,-2))//第2個不合法的值,不刪除,回傳[]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr2</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>0,6</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[1,2,3,4,5,6]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr2</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//[7,8]</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr3</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,3,4,5,6,7,8</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr3</span><span class="variable" data-v-99d0faad>.splice</span><span class="brackets" data-v-99d0faad>(</span> <span class="number" data-v-99d0faad>0,0,</span><span class="src" data-v-99d0faad>&quot;a&quot;</span> <span class="then" data-v-99d0faad>,</span><span class="src" data-v-99d0faad>&quot;b&quot;</span> <span class="brackets" data-v-99d0faad>))</span></div><div data-v-99d0faad><span class="comment" data-v-99d0faad>//[&quot;a&quot;,&quot;b&quot;,1,2,3,4,5,6,7,8]</span></div></div><table class="fz30" data-v-99d0faad><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>slice</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>splice</div></td></tr><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad>原數組</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>不改變</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>會改原數組</div></td></tr><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad>沒傳參數</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>返回原數組</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad><div class="" data-v-99d0faad>返回由刪除元素</div><div class="" data-v-99d0faad>組成的數組</div><div class="" data-v-99d0faad>沒刪返回空</div></div></td></tr><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad>參數一個時</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>一樣</div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad>一樣</div></td></tr><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td></tr><tr data-v-99d0faad><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td><td data-v-99d0faad><div class="pad20" data-v-99d0faad></div></td></tr></table><div id="threemethod012" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. every &amp; some <span class="spo marL100" data-v-99d0faad>回調</span></div><p class="fz28" data-v-99d0faad> every 判斷 數組中 每個元素 是否都符合條件, 都符合返回 true, 否返回 false </p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>🐕🐶🐕🐕.every(🐕) &gt; false</p><br data-v-99d0faad><br data-v-99d0faad><p class="fz28" data-v-99d0faad> some 判斷 數組中 每個元素 是否有一些 滿足 傳入條件 , 有返回 true </p><br data-v-99d0faad><p class="fz28" data-v-99d0faad>🐕🐶🐶🐕.some(🐶) &gt; true</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>1.裡面幾個參數 2. 返回值返回什麼 3. 使用方法</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.every</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>當前數組元素,元素索引值,arr</span><span class="brackets" data-v-99d0faad>))</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span><span class="variable" data-v-99d0faad>.every</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index,arr</span><span class="brackets" data-v-99d0faad>))</span></div><br data-v-99d0faad> # <div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>arr</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>10,20,30</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>flag</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr.</span> <span class="variable" data-v-99d0faad>every</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>&gt;=</span> <span class="number" data-v-99d0faad>10</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>flag</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// true</span></div><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.some</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>當前數組元素,元素索引值,arr</span><span class="brackets" data-v-99d0faad>))</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>arr</span> <span class="variable" data-v-99d0faad>.some</span><span class="brackets" data-v-99d0faad>(</span><span class="cor36" data-v-99d0faad>回調函數</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>item,index,arr</span><span class="brackets" data-v-99d0faad>))</span></div><br data-v-99d0faad> # <div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>flag</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr.</span> <span class="variable" data-v-99d0faad>some</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>&gt;=</span> <span class="number" data-v-99d0faad>20</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>flag</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>// true</span></div></div><div id="threemethod013" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. concat . . . 不改變 原數組 </div><p class="fz28" data-v-99d0faad> concat 方法用於 多個數組合並 , 他將 新數組的成員 , 加到 原數組 成員的 後部 , 然後返回一個 新數組 </p><p class="fz28" data-v-99d0faad>原數組不變</p><br data-v-99d0faad><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr1</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;wayne&quot;,&quot;jack&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr2</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;hello&quot;,&quot;hi&quot;</span><span class="brackets" data-v-99d0faad>]</span> <span class="word" data-v-99d0faad></span></div><br data-v-99d0faad><div data-v-99d0faad><span class="comment" data-v-99d0faad>//直接+會變字串</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr1</span><span class="then" data-v-99d0faad>+</span> <span class="word" data-v-99d0faad>arr2</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//wayne,jackhello,hi</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr1.concat</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr2</span><span class="brackets" data-v-99d0faad>)) </span><span class="comment" data-v-99d0faad>//[&quot;wayne&quot;,&quot;jack&quot;,&quot;hello&quot;,&quot;hi&quot;]</span></div><br data-v-99d0faad><p data-v-99d0faad>也可以多個</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr3</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="src" data-v-99d0faad>&quot;web&quot;,&quot;Python&quot;</span><span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr1.concat</span><span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr2,arr3</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[&quot;wayne&quot;,&quot;jack&quot;,&quot;hello&quot;,&quot;hi&quot;,&quot;web&quot;,&quot;Python&quot;]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr1</span><span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>//3個原數組沒變</span></div><br data-v-99d0faad><p data-v-99d0faad>除了接受數組,也接受其他類型的值作為參數,添加到數組尾部</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>let </span> <span class="word" data-v-99d0faad>arr4</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>10</span> <span class="brackets" data-v-99d0faad>]</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console</span><span class="variable" data-v-99d0faad>.log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr4</span><span class="variable" data-v-99d0faad>.concat</span><span class="brackets" data-v-99d0faad>(</span><span class="number" data-v-99d0faad>20,30,40</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[10,20,30,40]</span></div><br data-v-99d0faad><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="brackets" data-v-99d0faad>[</span> <span class="number" data-v-99d0faad>1,2,3</span><span class="brackets" data-v-99d0faad>]</span><span class="variable" data-v-99d0faad>.concat</span><span class="brackets" data-v-99d0faad>(</span><span class="number" data-v-99d0faad>4,5,6,</span><span class="brackets" data-v-99d0faad>[</span> <span class="number" data-v-99d0faad>7,8,9</span><span class="brackets" data-v-99d0faad>])</span></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>[</span><span class="number" data-v-99d0faad>1,2,3,4,5,6,7,8,9</span><span class="brackets" data-v-99d0faad>]</span></div></div><div id="threemethod014" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. Array.form() </div><p class="fz28" data-v-99d0faad>偽數組轉換為真數組</p><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>＜</span> <span class="word" data-v-99d0faad>ul</span><span class="then" data-v-99d0faad>&gt;</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>＜</span> <span class="word" data-v-99d0faad>li</span><span class="then" data-v-99d0faad>&gt;</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>＜</span> <span class="word" data-v-99d0faad>li</span><span class="then" data-v-99d0faad>&gt;</span></div><div class="pTwo" data-v-99d0faad><span class="then" data-v-99d0faad>＜</span> <span class="word" data-v-99d0faad>li</span><span class="then" data-v-99d0faad>&gt;</span></div><div data-v-99d0faad><span class="then" data-v-99d0faad>＜/</span> <span class="word" data-v-99d0faad>ul</span><span class="then" data-v-99d0faad>&gt;</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>lis</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>document</span><span class="variable" data-v-99d0faad>.querySelectorAll</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;ul li&quot;</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>lis</span> <span class="brackets" data-v-99d0faad>)</span><span class="comment" data-v-99d0faad>// 是 偽數組 Argument 也是</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>lis.</span> <span class="variable" data-v-99d0faad>pop</span><span class="brackets" data-v-99d0faad>() </span><span class="comment" data-v-99d0faad>// pop is not a function</span></div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>liss</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>Array</span><span class="variable" data-v-99d0faad>.from</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>lis</span><span class="brackets" data-v-99d0faad>)</span></div></div><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><p class="fz28" data-v-99d0faad></p><div id="threemethod015" class="articleCardTitle cor36 fz34" data-v-99d0faad> 4. 綜合練習 </div><div class="dis" data-v-99d0faad><div class="bgcVS w100" data-v-99d0faad><p data-v-99d0faad>JSON格式msg={&quot;code&quot;:200,&quot;data&quot;:[{...}]}</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="brackets" data-v-99d0faad>{</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>}</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>msg</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>function </span><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>)</span></div><div class="brackets" data-v-99d0faad>}</div><div data-v-99d0faad><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>)</span></div></div><div class="bgcVSMid" data-v-99d0faad>&gt;</div><div class="bgcVS w100" data-v-99d0faad><br data-v-99d0faad><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>function </span><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>arr</span><span class="brackets" data-v-99d0faad>){</span></div><div class="pTwo VSL" data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="brackets" data-v-99d0faad>{</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>}</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>arr</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>)</span></div><div class="brackets" data-v-99d0faad>}</div><div data-v-99d0faad><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>msg</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div class="disCen comment" data-v-99d0faad>更簡潔寫法 V</div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>function </span><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>( { </span><span class="word" data-v-99d0faad>data </span><span class="brackets" data-v-99d0faad>} ) {</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>data</span><span class="brackets" data-v-99d0faad>)</span></div><div class="brackets" data-v-99d0faad>}</div><div data-v-99d0faad><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>msg</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div class="comment" data-v-99d0faad>data容易命名衝突, 接進來資料改名myData</div><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>function </span><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>( { </span><span class="word" data-v-99d0faad>data: myData </span><span class="brackets" data-v-99d0faad>} ) {</span></div><div class="pTwo VSL" data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>myData</span><span class="brackets" data-v-99d0faad>)</span></div><div class="brackets" data-v-99d0faad>}</div><div data-v-99d0faad><span class="word" data-v-99d0faad>render</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>msg</span><span class="brackets" data-v-99d0faad>)</span></div></div></div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>spec</span> <span class="then" data-v-99d0faad>=</span><span class="brackets" data-v-99d0faad>{</span> <span class="word" data-v-99d0faad>size:</span><span class="src" data-v-99d0faad>&quot;40cm*40cm&quot;</span><span class="word" data-v-99d0faad>,color:</span><span class="src" data-v-99d0faad>&quot;black&quot;</span> <span class="brackets" data-v-99d0faad>}</span></div><span class="comment" data-v-99d0faad>//1.獲取所有屬性值</span><div data-v-99d0faad><span class="brackets" data-v-99d0faad>Object</span><span class="variable" data-v-99d0faad>.values</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>spec</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>Object.values</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>spec</span><span class="brackets" data-v-99d0faad>))</span><span class="comment" data-v-99d0faad>//[&quot;40cm*40cm&quot;,&quot;black&quot;]</span></div><span class="comment" data-v-99d0faad>// 2. 轉換為字串 join(&quot;/&quot;)</span><span class="comment" data-v-99d0faad>// 2. 轉換為字串</span><div data-v-99d0faad><span class="brackets" data-v-99d0faad>Object</span><span class="variable" data-v-99d0faad>.values</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>spec</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;/&quot;</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="brackets" data-v-99d0faad>Object</span><span class="variable" data-v-99d0faad>.values</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>spec</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;/&quot;</span><span class="brackets" data-v-99d0faad>)) </span><span class="comment" data-v-99d0faad>//40cm*40cm/black</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>document.</span><span class="variable" data-v-99d0faad>querySelect</span><span class="brackets" data-v-99d0faad>(</span><span class="src" data-v-99d0faad>&quot;.showDiv&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.innerHTML</span><span class="then" data-v-99d0faad>=</span> <span class="brackets" data-v-99d0faad>Object</span><span class="word" data-v-99d0faad>.value</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>spec</span> <span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;/&quot;</span><span class="brackets" data-v-99d0faad>)</span></div></div><div class="bgcVS" data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>tea</span> <span class="then" data-v-99d0faad>=</span><span class="src" data-v-99d0faad>&quot;50g的飲料,100g茶葉&quot;</span></div><span class="comment" data-v-99d0faad>// 1.把字串轉成數組</span><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)) </span><span class="comment" data-v-99d0faad>// [ &quot;50g的飲料&quot;, &quot;100g茶葉&quot; ]</span></div><span class="comment" data-v-99d0faad>// 2. 有幾條數據 我就生成幾個 ＜span&gt;</span><div data-v-99d0faad><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){ </span><span class="comment" data-v-99d0faad>//item是裡面的每一個值</span></div><div class="pTwo" data-v-99d0faad><div class="dis" data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="src" data-v-99d0faad>`＜span&gt;贈品</span><span class="then" data-v-99d0faad>${</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>}</span> <span class="src" data-v-99d0faad>＜/span&gt;`</span></div><div class="comment" data-v-99d0faad><span data-v-99d0faad>//贈品50g的飲料</span><br data-v-99d0faad><span data-v-99d0faad>//贈品100g茶葉</span></div></div></div><span class="brackets" data-v-99d0faad>})</span><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>str</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){ </span></div><div class="pTwo" data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="src" data-v-99d0faad>`＜span&gt;贈品</span><span class="then" data-v-99d0faad>${</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>}</span> <span class="src" data-v-99d0faad>＜/span&gt;`</span></div></div><span class="brackets" data-v-99d0faad>})</span><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>arr</span> <span class="brackets" data-v-99d0faad>) </span><span class="comment" data-v-99d0faad>[&quot;＜span&gt;贈品50g的飲料＜/span&gt;&quot;,&quot;＜span&gt;贈品100g茶葉＜/span&gt;&quot;]</span></div><br data-v-99d0faad><div class="comment" data-v-99d0faad>數組不能直接往盒子加</div><div class="comment" data-v-99d0faad>想要改成字串</div><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>str</span> <span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span><span class="function" data-v-99d0faad>function </span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="brackets" data-v-99d0faad>){ </span></div><div class="pTwo" data-v-99d0faad><div data-v-99d0faad><span class="then" data-v-99d0faad>return </span><span class="src" data-v-99d0faad>`＜span&gt;贈品</span><span class="then" data-v-99d0faad>${</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>}</span> <span class="src" data-v-99d0faad>＜/span&gt;`</span></div></div><div data-v-99d0faad><span class="brackets" data-v-99d0faad>})</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;&quot;</span><span class="brackets" data-v-99d0faad>)</span></div><div data-v-99d0faad><span class="word" data-v-99d0faad>console.</span><span class="variable" data-v-99d0faad>log</span> <span class="brackets" data-v-99d0faad>(</span><span class="word" data-v-99d0faad>str</span> <span class="brackets" data-v-99d0faad>)</span></div><span class="comment" data-v-99d0faad>＜span&gt;贈品50g的飲料＜/span&gt;＜span&gt;贈品100g茶葉＜/span&gt;</span><div data-v-99d0faad><span class="word" data-v-99d0faad>document.</span><span class="variable" data-v-99d0faad>querySelector</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;div&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.innerHTML</span><span class="then" data-v-99d0faad>=</span> <span class="word" data-v-99d0faad>str</span></div><br data-v-99d0faad><br data-v-99d0faad><p data-v-99d0faad>轉成箭頭函數</p><br data-v-99d0faad><div data-v-99d0faad><span class="function" data-v-99d0faad>const </span><span class="word" data-v-99d0faad>tea</span> <span class="then" data-v-99d0faad>=</span><span class="src" data-v-99d0faad>&quot;50g的飲料,100g茶葉&quot;</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="then" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span><span class="src" data-v-99d0faad>`＜span&gt;贈品</span><span class="then" data-v-99d0faad>${</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>}</span><span class="src" data-v-99d0faad>＜/span&gt;＜br&gt;`</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;&quot;</span><span class="brackets" data-v-99d0faad>)</span></div><br data-v-99d0faad><div data-v-99d0faad><span class="word" data-v-99d0faad>document.</span><span class="variable" data-v-99d0faad>querySelector</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>&quot;div&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.innerHTML</span><span class="then" data-v-99d0faad>=</span><span class="word" data-v-99d0faad>tea.</span><span class="variable" data-v-99d0faad>split</span><span class="brackets" data-v-99d0faad>(</span> <span class="then" data-v-99d0faad>&quot;,&quot;</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.map</span><span class="brackets" data-v-99d0faad>(</span> <span class="word" data-v-99d0faad>item</span><span class="function" data-v-99d0faad>=&gt;</span><span class="src" data-v-99d0faad>`＜span&gt;贈品</span><span class="then" data-v-99d0faad>${</span> <span class="word" data-v-99d0faad>item</span><span class="then" data-v-99d0faad>}</span><span class="src" data-v-99d0faad>＜/span&gt;＜br&gt;`</span><span class="brackets" data-v-99d0faad>)</span><span class="variable" data-v-99d0faad>.join</span><span class="brackets" data-v-99d0faad>(</span> <span class="src" data-v-99d0faad>&quot;&quot;</span><span class="brackets" data-v-99d0faad>)</span></div></div>',102),H=n(()=>a("div",{class:"toTopButton"},[a("div",{class:"disCen"},"___"),a("div",{class:"disCen"},"▲")],-1)),J=[H],R=n(()=>a("div",{class:"toBotButton"},[a("div",{class:"disCen"},"▼"),a("div",{class:"disCen"},"￣")],-1)),Y=[R],G={__name:"JsPageThreeFour",setup(p){const c=k(!1);window.addEventListener("scroll",function(){c.value=window.scrollY>0});function b(){window.scrollTo({top:0,left:0,behavior:"smooth"})}function u(){window.scrollTo({top:999999,left:0,behavior:"smooth"})}function s(r){window.scrollTo({top:document.getElementById(`${r}`).offsetTop,behavior:"smooth"})}return(r,d)=>{const w=m("P");return h(),q(z,null,[a("section",null,[a("div",L,[a("div",y,[a("div",C,[a("div",{onClick:d[0]||(d[0]=t=>s("threemethod001")),class:"leftNavText"}," .push() "),a("div",{onClick:d[1]||(d[1]=t=>s("threemethod002")),class:"leftNavText"}," .pop() "),a("div",{onClick:d[2]||(d[2]=t=>s("threemethod003")),class:"leftNavText"}," .shift "),a("div",{onClick:d[3]||(d[3]=t=>s("threemethod004")),class:"leftNavText"}," .unshift "),a("div",{onClick:d[4]||(d[4]=t=>s("threemethod017")),class:"leftNavText"},P),a("div",{onClick:d[5]||(d[5]=t=>s("threemethod005")),class:"leftNavText"}," .map() "),a("div",{onClick:d[6]||(d[6]=t=>s("threemethod006")),class:"leftNavText"}," .forEach() "),a("div",{onClick:d[7]||(d[7]=t=>s("threemethod016")),class:"leftNavText"}," .filter() "),a("div",{onClick:d[8]||(d[8]=t=>s("threemethod007")),class:"leftNavText"}," .join() "),a("div",{onClick:d[9]||(d[9]=t=>s("threemethod008")),class:"leftNavText"}," .reduce() "),a("div",{onClick:d[10]||(d[10]=t=>s("threemethod009")),class:"leftNavText"}," .find() "),a("div",{onClick:d[11]||(d[11]=t=>s("threemethod010")),class:"leftNavText"}," .slice() "),a("div",{onClick:d[12]||(d[12]=t=>s("threemethod011")),class:"leftNavText"}," .splice() "),a("div",{onClick:d[13]||(d[13]=t=>s("threemethod012")),class:"leftNavText"},$),a("div",{onClick:d[14]||(d[14]=t=>s("threemethod013")),class:"leftNavText"}," .concat(arr) "),a("div",{onClick:d[15]||(d[15]=t=>s("threemethod014")),class:"leftNavText"}," Array.form() "),a("div",{onClick:d[16]||(d[16]=t=>s("threemethod015")),class:"leftNavText"},"練習")])])]),a("div",E,[a("div",O,[a("div",A,[I,a("div",B,[F,f(w,null,{default:l(()=>[g("map 特點: 有一個數組返回給我們 , 所以 const newArr")]),_:1}),M]),D])])])]),a("div",null,[e(f(i,{name:"fade",tag:"div"},{default:l(()=>[a("div",{onClick:b,class:"toTop"},J)]),_:1},512),[[o,c.value]]),e(f(i,{name:"fade",tag:"div"},{default:l(()=>[a("div",{onClick:u,class:"toBot"},Y)]),_:1},512),[[o,c.value]])])],64)}}},U=V(G,[["__scopeId","data-v-99d0faad"]]);export{U as default};
