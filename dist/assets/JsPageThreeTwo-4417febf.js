import{e as k,r as h,o as g,c as z,a,b as c,w as f,i as r,h as e,v as b,T as w,F as T,f as d,p as _,d as q}from"./index-2e4f8d1f.js";import{_ as S}from"./_plugin-vue_export-helper-c27b6911.js";const n=v=>(_("data-v-2037699f"),v=v(),q(),v),x={class:"leftNav"},y={class:"leftNavContainer"},C={class:"leftNavLayout"},j={class:"Main"},F={class:"mainContainer"},V={class:"mainLayout"},N=d('<br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>總分總</p><p class="fz28" data-v-2037699f>1.要講哪個知識點</p><p class="fz28" data-v-2037699f>2.細講</p><p class="fz28" data-v-2037699f>3.總結</p><br data-v-2037699f><br data-v-2037699f><div id="twofunction001" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.1 函數提升 </div><br data-v-2037699f><div class="bgcVS fz30" data-v-2037699f><div class="comment" data-v-2037699f> // 1.會把所有函數聲明提升到當前作用域最前面 </div><div class="comment" data-v-2037699f>// 2.只提升函數聲明, 不提升函數調用-&gt;()</div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>()</span><span class="comment" data-v-2037699f>// &quot;函數提升&quot;</span></div><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="src" data-v-2037699f>&quot;函數提升</span> <span class="then" data-v-2037699f>&quot;</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>)</div><br data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="word" data-v-2037699f>fun</span> <span class="brackets" data-v-2037699f>() </span><span class="comment" data-v-2037699f>// fun is not a function</span></div><div data-v-2037699f><span class="function" data-v-2037699f>var </span><span class="variable" data-v-2037699f>fun </span><span class="then" data-v-2037699f>= </span><span class="function" data-v-2037699f>function </span><span class="brackets" data-v-2037699f>(){ </span><span class="comment" data-v-2037699f>// 這叫 賦值</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="src" data-v-2037699f>&quot;函數表達式&quot;</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>}</div><span class="comment" data-v-2037699f>// var 只提升聲明 不賦值</span></div><div id="twofunction002" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.2 形參實參 </div><p class="fz28 cor36" data-v-2037699f>形式參數</p><p class="fz28" data-v-2037699f>接收函數在調用的時候傳入的具體參數值</p><br data-v-2037699f><p class="fz28" data-v-2037699f>1.出現在函數的定義裡面 , 只能在函數體內使用</p><br data-v-2037699f><p class="fz28 cor36" data-v-2037699f>實際參數</p><p class="fz28" data-v-2037699f>調用的時候傳入的具體值</p><br data-v-2037699f><p class="fz28" data-v-2037699f>1.出現在主調函數裡面 , 被調不能訪問實參</p><p class="fz28" data-v-2037699f> 2.實參是基本類型的值, 將實參值進行拷貝傳給形參, 函數運行完, 釋放形參, 所以實參不會被改變 </p><p class="fz28" data-v-2037699f> 2.實參是引用類型的值, 將實參內存地址進行拷貝傳給形參, 實參和形參將會指向同一地址 </p><br data-v-2037699f><p class="fz28" data-v-2037699f>其他:</p><p class="fz28" data-v-2037699f> 1.函數可以不定義形參, 函數體內可以通過 arguments 這個變量來獲取到 我們實際傳遞的參數 </p><p class="fz28" data-v-2037699f>2. 函數的參數個數、數據類型不一定要相同</p><br data-v-2037699f><br data-v-2037699f>',29),H={class:"bgcVS"},B=d('<div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn1</span> <span class="brackets" data-v-2037699f>(){</span></div><div class="pTwo" data-v-2037699f><span class="function" data-v-2037699f>var </span><span class="word" data-v-2037699f>param</span> <span class="then" data-v-2037699f>=</span><span class="src" data-v-2037699f>&quot;hi&quot;;</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>fn2</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>param</span> <span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// 對 fn2 來說是 實參</span></div><div class="brackets" data-v-2037699f>}</div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn2</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg</span> <span class="brackets" data-v-2037699f>){ </span><span class="comment" data-v-2037699f>// 形參</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg</span> <span class="brackets" data-v-2037699f>);</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>param</span> <span class="brackets" data-v-2037699f>); </span><span class="comment" data-v-2037699f>// param is not defined</span></div><div class="brackets" data-v-2037699f>}</div><br data-v-2037699f><div class="comment" data-v-2037699f> // 實參是基本類型的值, 將實參值進行拷貝傳給形參, 函數運行完, 釋放形參, 所以實參不會被改變 </div><div data-v-2037699f><span class="function" data-v-2037699f>var </span> <span class="word" data-v-2037699f>arg</span><span class="then" data-v-2037699f>=</span> <span class="word" data-v-2037699f>1;</span></div><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>param</span> <span class="brackets" data-v-2037699f>){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>param</span> <span class="brackets" data-v-2037699f>){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>param</span> <span class="then" data-v-2037699f>=</span><span class="word" data-v-2037699f>2;</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg</span> <span class="brackets" data-v-2037699f>); </span><span class="comment" data-v-2037699f>// 1</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg</span> <span class="brackets" data-v-2037699f>); </span><span class="comment" data-v-2037699f>// 1 </span><span class="comment" data-v-2037699f>// 所以實參不會被改變 </span></div><br data-v-2037699f><br data-v-2037699f><div class="comment" data-v-2037699f> // 實參是引用類型的值, 將實參內存地址進行拷貝傳給形參, 實參和形參將會指向同一地址 </div><div data-v-2037699f><span class="function" data-v-2037699f>var </span> <span class="word" data-v-2037699f>arg2</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>{</span><span class="word" data-v-2037699f>name:</span> <span class="src" data-v-2037699f>&quot;wayne&quot;</span><span class="brackets" data-v-2037699f>};</span></div><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn2</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>param</span> <span class="brackets" data-v-2037699f>){</span></div>',23),E=n(()=>a("span",{class:"word"},"param.name",-1)),M=n(()=>a("span",{class:"then"},"=",-1)),$=n(()=>a("span",{class:"src"},'"會改變值但不改變指向"',-1)),I=d('<div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>param</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{};</span><span class="comment" data-v-2037699f>//改變了形參的指向</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>fn2</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg2</span> <span class="brackets" data-v-2037699f>); </span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg2</span> <span class="brackets" data-v-2037699f>); </span><span class="comment" data-v-2037699f>// { name: &quot;會改變值但不改變指向&quot; } </span></div><span class="comment" data-v-2037699f>// 不能改變引用地址, 能改變值 </span><br data-v-2037699f><br data-v-2037699f><div class="comment" data-v-2037699f>// 函數的參數個數、數據類型不一定要相同</div><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn3</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arg1:string,arg2</span><span class="brackets" data-v-2037699f>){</span></div><div class="pTwo" data-v-2037699f><span class="comment" data-v-2037699f>// 1. arg1 傳入 number 類型 可以</span></div><div class="pTwo" data-v-2037699f><span class="comment" data-v-2037699f>// 2. arg2 沒傳入 是 undefined </span></div><div class="brackets" data-v-2037699f>}</div>',12),L=d('<br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>需求 寫一個求和函數</p><p class="fz28" data-v-2037699f>不管傳入多少實參 都要求和</p><p class="fz28" data-v-2037699f>getSum( 2, 3)</p><p class="fz28" data-v-2037699f>getSum( 1, 2, 3)</p><p class="fz28" data-v-2037699f>getSum( 1, 2, 3, 4, 5,)</p><div id="twofunction003" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.3 動態參數 arguments </div><div class="bgcVS" data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(){</span></div><div class="comment pTwo" data-v-2037699f> // arguments 動態參數 只存在於 函數裡面 </div><div class="comment pTwo" data-v-2037699f> // 1. 是偽數組 -&gt; 有所引號 有.length , 沒有常用的方法 </div><div class="word pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arguments</span><span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// [2,3,4]</span></div><div class="pTwo" data-v-2037699f><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>sum</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>0</span></div><div class="pTwo" data-v-2037699f><span class="then" data-v-2037699f>for </span> <span class="brackets" data-v-2037699f>(</span><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>0</span><span class="then" data-v-2037699f>;</span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>＜</span><span class="word" data-v-2037699f>arguments</span><span class="variable" data-v-2037699f>.length</span><span class="then" data-v-2037699f>;</span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>++</span><span class="brackets" data-v-2037699f>){</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>sum</span> <span class="then" data-v-2037699f>+=</span><span class="word" data-v-2037699f>arguments</span><span class="brackets" data-v-2037699f>[</span> <span class="word" data-v-2037699f>i</span><span class="brackets" data-v-2037699f>]</span></div><div class="pTwo brackets" data-v-2037699f>}</div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>sum</span> <span class="then" data-v-2037699f>+=</span><span class="word" data-v-2037699f>arguments</span><span class="brackets" data-v-2037699f>[</span> <span class="word" data-v-2037699f>i</span><span class="brackets" data-v-2037699f>]</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>2,3,4</span> <span class="brackets" data-v-2037699f>)</span></div></div><br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>總結</p><p class="fz28" data-v-2037699f>1. arguments 是一個偽數組, 只存在函數中</p><p class="fz28" data-v-2037699f>2. arguments 作用是 動態獲取函數的 實參</p><p class="fz28" data-v-2037699f>3. 可用 for 循環依次得到傳過來的 實參</p><br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>需求 寫一個求和函數</p><p class="fz28" data-v-2037699f>不管傳入多少實參 都要求和</p><p class="fz28" data-v-2037699f>getSum( 2, 3)</p><p class="fz28" data-v-2037699f>getSum( 1, 2, 3)</p><p class="fz28" data-v-2037699f>getSum( 1, 2, 3, 4, 5,)</p><p class="fz28" data-v-2037699f>改成形參?</p><div id="twofunction004" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.4 剩餘參數 ＜- 建議用這個 </div><p class="fz28" data-v-2037699f>剩餘參數允許我們將一個不定數量的參數表示為一個數組</p><div class="bgcVS" data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...arr</span><span class="brackets" data-v-2037699f>){</span></div><div class="word pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arr</span><span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// [2,3,4]</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>2,3,4</span> <span class="brackets" data-v-2037699f>)</span></div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>a, b, ...arr</span><span class="brackets" data-v-2037699f>){</span></div><div class="comment pTwo" data-v-2037699f>// 2 給 a , 3 給 b</div><div class="word pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>arr</span><span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// [2,3,4] </span><span class="comment" data-v-2037699f>// 使用時不用加&quot;...&quot;</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>2,3,4</span> <span class="brackets" data-v-2037699f>)</span></div></div><br data-v-2037699f><p class="fz28" data-v-2037699f>動態、剩餘參數差別</p><p class="fz28" data-v-2037699f> 1. ...是語法符號, 置於最末函數形參之前, 用於獲取多餘的實參 </p><p class="fz28" data-v-2037699f>2. 剩餘參數 獲取的數組是 真數組</p><div id="twofunction005" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.5 展開運算符 </div><p class="fz28" data-v-2037699f>展開運算符</p><p class="fz28" data-v-2037699f> 可以把陣列展開, 可以利用求陣列最大值 和 合併陣列 等操作 </p><br data-v-2037699f><p class="fz28" data-v-2037699f> : 比如const a 等於, 然後一個陣列, 然後a點點點b, 這個b是一個舊陣列, 然後它會把a和b合成形成新陣列, 然後返回給變量 </p><br data-v-2037699f><div class="bgcVS" data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>a</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="number" data-v-2037699f>1, 2, 3</span><span class="brackets" data-v-2037699f>]</span></div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>b</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="number" data-v-2037699f>4, 5, 6 </span><span class="brackets" data-v-2037699f>]</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>用於拼接陣列</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>c</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="word" data-v-2037699f>...a,...b</span><span class="brackets" data-v-2037699f>] </span><span class="comment" data-v-2037699f>// [1,2,3,4,5,6]</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>也可以</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>d</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="word" data-v-2037699f>...a,</span><span class="number" data-v-2037699f>4, 5, 6</span><span class="brackets" data-v-2037699f>] </span><span class="comment" data-v-2037699f>// [1,2,3,4,5,6]</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>也可以</div><div data-v-2037699f><span class="word" data-v-2037699f>a.push</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...b</span> <span class="brackets" data-v-2037699f>)</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console</span><span class="variable" data-v-2037699f>.log</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>a</span><span class="brackets" data-v-2037699f>)</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>可以做陣列淺拷貝</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>e</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="word" data-v-2037699f>...a</span> <span class="brackets" data-v-2037699f>]</span></div><div data-v-2037699f><span class="word" data-v-2037699f>e.push</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>4</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 不會影響 a</span></div><br data-v-2037699f><div class="comment" data-v-2037699f> 淺拷貝是指複製值時，原本的變數和新的變數會指向同一個址 (reference) </div><div class="comment" data-v-2037699f> 深拷貝是指在拷貝時不共享相同的址 (reference) </div><br data-v-2037699f></div><br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>a={...b} 可以嗎?</p><br data-v-2037699f><div class="bgcVS" data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj1</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span> <span class="word" data-v-2037699f>a:</span><span class="number" data-v-2037699f>1,</span> <span class="word" data-v-2037699f>b:</span><span class="number" data-v-2037699f>2</span> <span class="brackets" data-v-2037699f>};</span></div><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj2</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span> <span class="word" data-v-2037699f>c:</span><span class="number" data-v-2037699f>3,</span> <span class="word" data-v-2037699f>d:</span><span class="number" data-v-2037699f>4</span> <span class="brackets" data-v-2037699f>};</span></div><br data-v-2037699f><span class="comment" data-v-2037699f>// 可以 拷貝 物件</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>newObj</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span> <span class="word" data-v-2037699f>...obj1</span><span class="brackets" data-v-2037699f>}</span><span class="word" data-v-2037699f></span></div><br data-v-2037699f><span class="comment" data-v-2037699f>// 可以 merged 2 個物件</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>merged</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span><span class="word" data-v-2037699f>...obj1,obj2</span><span class="brackets" data-v-2037699f>};</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>merged</span><span class="brackets" data-v-2037699f>); </span><span class="comment" data-v-2037699f>// {a: 1, b: 2, c: 3, d: 4 }</span></div><br data-v-2037699f></div><br data-v-2037699f><br data-v-2037699f><p class="cor36 fz28" data-v-2037699f> 這三個點除了把一個東西展開,它在函數參數有什麼用? </p><p class="fz28" data-v-2037699f> 可以不去命名那個函數的參數, 直接用函數參數對象裡面的某一個東西 </p><br data-v-2037699f><p class="cor36 fz28" data-v-2037699f>參數裡面可不可以用三個點?</p><p class="fz28" data-v-2037699f>可以</p><br data-v-2037699f><p class="cor36 fz28" data-v-2037699f>在賦值可以用三個點嗎?</p><p class="fz28" data-v-2037699f>可以</p><br data-v-2037699f><p class="cor36 fz28" data-v-2037699f> 我有一個陣列長度為10,我想把前面第一個元素命名為a,後面9個元素命名為新的數組叫b怎麼做? </p><p class="fz28" data-v-2037699f> 方括號a然後點,然後逗號,然後點點點rest,然後方括號,然後等於array1,那就是a,那個a就是array裡的第一個 </p><br data-v-2037699f><br data-v-2037699f>',57),D={class:"bgcVS"},J=d('<br data-v-2037699f><div class="comment" data-v-2037699f>// 用於函數傳參</div><br data-v-2037699f><div class="comment" data-v-2037699f>// 實參的用法</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>a</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="number" data-v-2037699f>1, 2, 3</span><span class="brackets" data-v-2037699f>]</span></div>',5),O=n(()=>a("span",{class:"function"},"function ",-1)),P=n(()=>a("span",{class:"word"},"test",-1)),R=n(()=>a("span",{class:"brackets"},"(",-1)),Y=n(()=>a("span",{class:"word"},"p1,p2,p3",-1)),A=n(()=>a("span",{class:"brackets"},"){",-1)),G=d('<div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>p1</span> <span class="brackets" data-v-2037699f>);</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>p2</span> <span class="brackets" data-v-2037699f>);</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>p3</span> <span class="brackets" data-v-2037699f>);</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>test</span><span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span> <span class="brackets" data-v-2037699f>)</span></div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>sum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>a,b,c</span> <span class="brackets" data-v-2037699f>){</span></div><div class="pTwo" data-v-2037699f><span class="then" data-v-2037699f>return </span> <span class="word" data-v-2037699f>a+b+c</span></div><span class="brackets" data-v-2037699f>}</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>sum</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>a,b,c</span><span class="brackets" data-v-2037699f>)</span> <span class="function" data-v-2037699f>=&gt;</span><span class="word" data-v-2037699f>a+b+c</span></div><div data-v-2037699f><span class="word" data-v-2037699f>sum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span> <span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// 6</span></div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>sum</span> <span class="then" data-v-2037699f>=</span><span class="word" data-v-2037699f>sum</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span><span class="brackets" data-v-2037699f>)</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>// 形參的用法</div><div data-v-2037699f><span class="word" data-v-2037699f>conso.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>Math.max</span><span class="brackets" data-v-2037699f>(</span><span class="src" data-v-2037699f>必須是字符的形式,不能直接接陣列,必須逗號隔開 </span><span class="brackets" data-v-2037699f>)</span> <span class="brackets" data-v-2037699f>)</span></div><div data-v-2037699f><span class="word" data-v-2037699f>conso.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>Math.max</span><span class="brackets" data-v-2037699f>(</span> <span class="number" data-v-2037699f>1,2,3</span><span class="brackets" data-v-2037699f>)</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 裡面要逗號</span></div><div class="comment" data-v-2037699f>// 陣列沒有 求最大值 的方法</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>a</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="number" data-v-2037699f>1, 2, 3</span><span class="brackets" data-v-2037699f>]</span></div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>b</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>[</span><span class="number" data-v-2037699f>4, 5, 6</span><span class="brackets" data-v-2037699f>]</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span><span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 1 2 3</span><span class="comment" data-v-2037699f>// 打印沒逗號,一樣能用在.max</span></div><span class="comment" data-v-2037699f>...a === 1,2,3</span><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="word" data-v-2037699f>Math</span><span class="variable" data-v-2037699f>.max</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span><span class="brackets" data-v-2037699f>)</span> <span class="comment" data-v-2037699f>// 3</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="word" data-v-2037699f>Math</span><span class="variable" data-v-2037699f>.min</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a</span><span class="brackets" data-v-2037699f>)</span> <span class="comment" data-v-2037699f>// 3</span></div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="word" data-v-2037699f>Math</span><span class="variable" data-v-2037699f>.max</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>...a,...b</span><span class="brackets" data-v-2037699f>)</span> <span class="comment" data-v-2037699f>// 6</span></div><br data-v-2037699f><div class="comment" data-v-2037699f>// 形參 &amp; 實參</div><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>test</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>形參1,形參2</span><span class="brackets" data-v-2037699f>){ </span><span class="comment" data-v-2037699f>// 函數聲明的小括號裡是 形參 </span></div><div class="comment pTwo" data-v-2037699f>// 代碼</div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>test</span> <span class="brackets" data-v-2037699f>(</span><span class="word" data-v-2037699f>實參1,實參2</span><span class="brackets" data-v-2037699f>) </span><span class="comment" data-v-2037699f>// 函數調用的小括號裡是 實參</span></div>',31),K=d('<div class="articleCardTitle cor36 fz34" data-v-2037699f>匿名函數</div><p class="fz28" data-v-2037699f>1.事件</p><p class="fz28" data-v-2037699f>2.物件</p><p class="fz28" data-v-2037699f>3.函數表達式</p><p class="fz28" data-v-2037699f>4.回調函數</p><p class="fz28" data-v-2037699f>5.函數返回值</p><p class="fz28" data-v-2037699f>6.模仿塊級作用域 IIFE</p><div id="twofunction006" class="articleCardTitle cor36 fz34" data-v-2037699f> 2.6 箭頭函數 -&gt; 更適用於本來需要匿名函數的地方 </div><p class="fz28" data-v-2037699f>箭頭函數 和 普通function區別</p><p class="fz28" data-v-2037699f> 在執行過程中不會初始化this, 也不會初始化aruguments, 它不能被new, 沒有prototype, 它不能當成構造函數執行 </p><br data-v-2037699f><br data-v-2037699f><p class="fz28" data-v-2037699f>另外 1. 箭頭函式可作為物件的方法使用</p><br data-v-2037699f><p class="fz28" data-v-2037699f> 2. 箭頭函式(arrow function)的 this 不因為使用 call() / apply() / bind() 方法而被修改 </p><div class="dis" data-v-2037699f><div class="bgcVS" data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>=</span><span class="function" data-v-2037699f>function </span><span class="brackets" data-v-2037699f>(){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="number" data-v-2037699f>123</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>}</div></div><div class="bgcVSMid" data-v-2037699f>&gt;</div><div class="bgcVS" data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt;</span> <span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="number" data-v-2037699f>123</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>}</div><br data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>x</span><span class="brackets" data-v-2037699f>)</span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{ </span><span class="comment" data-v-2037699f>// 這裡接形參</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>x</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>1</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 這裡放實參</span></div><br data-v-2037699f><br data-v-2037699f><span class="comment" data-v-2037699f>// 只有一個形參 可省略小括號</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="word" data-v-2037699f>x </span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{ </span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>x</span><span class="brackets" data-v-2037699f>)</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>1</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 這裡放實參</span></div><span class="comment" data-v-2037699f>// 沒有形參 或 2 個形參 不可省略小括號</span><br data-v-2037699f><br data-v-2037699f><div class="comment" data-v-2037699f> // 只有一個語句 可省略大括號 並自動做為返回值被返回 </div><div class="comment" data-v-2037699f>// ( 只有一行代碼 )</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="word" data-v-2037699f>x </span><span class="function" data-v-2037699f>=&gt; </span><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>x</span><span class="brackets" data-v-2037699f>)</span></div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>1</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 要先聲明在調用</span></div><br data-v-2037699f><br data-v-2037699f><span class="comment" data-v-2037699f>// 只有一個形參 可省略小括號</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="word" data-v-2037699f>x </span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{ </span></div><div class="pTwo" data-v-2037699f><span class="then" data-v-2037699f>return </span><span class="word" data-v-2037699f>x </span><span class="then" data-v-2037699f>+ </span><span class="word" data-v-2037699f>x </span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>1</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 2</span></div><br data-v-2037699f><br data-v-2037699f><span class="comment" data-v-2037699f>// 如果在一行裡面可以省 return &amp; 大括號</span><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="word" data-v-2037699f>x </span><span class="function" data-v-2037699f>=&gt;</span><span class="word" data-v-2037699f>x </span><span class="then" data-v-2037699f>+ </span><span class="word" data-v-2037699f>x </span></div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>1</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// 2</span></div><br data-v-2037699f><br data-v-2037699f><div class="comment" data-v-2037699f>// 可以直接返回一個物件</div><div class="comment" data-v-2037699f>// 注意! 物件和函數都是 {}</div><div class="comment" data-v-2037699f>// 直接 ( { 物件 } )</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>uname</span><span class="brackets" data-v-2037699f>)</span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>( {</span><span class="word" data-v-2037699f>name: uname</span><span class="brackets" data-v-2037699f>} )</span></div><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>fn</span> <span class="then" data-v-2037699f>= </span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>uname</span><span class="brackets" data-v-2037699f>)</span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>( {</span><span class="word" data-v-2037699f>uname: uname</span><span class="brackets" data-v-2037699f>} )</span></div><div data-v-2037699f><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(</span><span class="src" data-v-2037699f>&quot;wayne&quot;</span> <span class="brackets" data-v-2037699f>)</span></div><br data-v-2037699f><br data-v-2037699f></div></div><div class="bgcVS" data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>form</span> <span class="then" data-v-2037699f>=</span><span class="word" data-v-2037699f>document.querySelector</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;form&quot;</span><span class="brackets" data-v-2037699f>)</span></div><div data-v-2037699f><span class="word" data-v-2037699f>form.addEventListener</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;click&quot;,</span><span class="function" data-v-2037699f>function</span><span class="brackets" data-v-2037699f>(e){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>e.preventDefault</span><span class="brackets" data-v-2037699f>()</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>form.addEventListener</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;click&quot;,</span><span class="word" data-v-2037699f>ev</span> <span class="function" data-v-2037699f>=&gt;</span><span class="word" data-v-2037699f>ev.preventDefault</span><span class="brackets" data-v-2037699f>())</span></div></div><p class="fz28" data-v-2037699f>結論</p><p class="fz28" data-v-2037699f>1. 箭頭屬於表達式函數, 不存在函數提升</p><p class="fz28" data-v-2037699f>2. 只有一個形參 可省略小括號 ( )</p><p class="fz28" data-v-2037699f> 3. 只有一個語句 (一行代碼) 可省略大括號 { } 並自動做為返回值被返回 </p><p class="fz28" data-v-2037699f>4. 加括號 ( ) 的函數體 返回 物件字面量 表達式</p><br data-v-2037699f><br data-v-2037699f><div class="articleCardTitle cor36 fz34" data-v-2037699f>箭頭函數參數</div><p class="fz28" data-v-2037699f>箭頭函數 沒有 arguments 動態參數</p><p class="fz28" data-v-2037699f>有 剩餘參數 ...args</p><div class="bgcVS" data-v-2037699f><div class="comment" data-v-2037699f>// 利用箭頭函數來求和</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>getSum</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>(</span> <span class="word" data-v-2037699f>...arr</span><span class="brackets" data-v-2037699f>)</span> <span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>sum</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>0</span></div><div class="pTwo" data-v-2037699f><span class="then" data-v-2037699f>for </span> <span class="brackets" data-v-2037699f>(</span><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>0</span><span class="then" data-v-2037699f>;</span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>＜</span> <span class="word" data-v-2037699f>arr.length</span><span class="then" data-v-2037699f>;</span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>++</span> <span class="brackets" data-v-2037699f>){</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>sum</span> <span class="then" data-v-2037699f>+=</span><span class="word" data-v-2037699f>arr</span> <span class="brackets" data-v-2037699f>[</span><span class="word" data-v-2037699f>i</span> <span class="brackets" data-v-2037699f>]</span></div><div class="comment" data-v-2037699f>// sum = sum + arr [ i ]</div><div class="pTwo brackets" data-v-2037699f>}</div><div class="pTwo" data-v-2037699f><span class="then" data-v-2037699f>return </span> <span class="word" data-v-2037699f>sum</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>getSum</span> <span class="brackets" data-v-2037699f>(</span><span class="number" data-v-2037699f>2,3</span> <span class="brackets" data-v-2037699f>)</span></div></div><div class="articleCardTitle cor36 fz34" data-v-2037699f>this 指向</div><table data-v-2037699f><tr data-v-2037699f><th data-v-2037699f><div class="pad20" data-v-2037699f>調用方式</div></th><th data-v-2037699f><div class="pad20" data-v-2037699f>示例</div></th><th data-v-2037699f><div class="pad20" data-v-2037699f>函數中this指向</div></th></tr><tr data-v-2037699f><td data-v-2037699f><div class="pad20" data-v-2037699f>通過new調用</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>mew method()</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>新物件</div></td></tr><tr data-v-2037699f><td data-v-2037699f><div class="pad20" data-v-2037699f>直接調用</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>method()</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>全局對象window</div></td></tr><tr data-v-2037699f><td data-v-2037699f><div class="pad20" data-v-2037699f>通過物件調用</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>obj.method()</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>前面的物件</div></td></tr><tr data-v-2037699f><td data-v-2037699f><div class="pad20" data-v-2037699f>call.apply.bind</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>method.call(ctx)</div></td><td data-v-2037699f><div class="pad20" data-v-2037699f>第一個參數</div></td></tr></table><div class="articleCardTitle cor36 fz34" data-v-2037699f>箭頭函數 this</div><p class="fz28" data-v-2037699f>箭頭函數的this指向哪裡?</p><p class="fz28" data-v-2037699f>外部的this or (捕獲其上下文中的this)</p><p class="fz28" data-v-2037699f> 箭頭函數不創建 this , 他從自己的作用域鏈的上一層沿用 this </p><div class="bgcVS" data-v-2037699f><div class="comment" data-v-2037699f> // 以前學this指向:誰調用的這個函數,this就指向誰 </div><div data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>//window</span></div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>function </span><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>(){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>//window</span></div><div class="brackets" data-v-2037699f>}</div><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>uname:</span> <span class="src" data-v-2037699f>&quot;wayne&quot;</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>sayHi:</span><span class="function" data-v-2037699f>function </span><span class="brackets" data-v-2037699f>(){</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// obj</span></div><div class="brackets pTwo" data-v-2037699f>}</div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>obj.sayHi</span><span class="brackets" data-v-2037699f>()</span></div><div class="comment" data-v-2037699f>// sayHi() 是 obj 調用的</div><div class="comment" data-v-2037699f>// this 指向 obj</div><br data-v-2037699f><br data-v-2037699f><div class="comment" data-v-2037699f>// 箭頭 this指向 上一層作用域的 this 指向</div><div data-v-2037699f><span class="function" data-v-2037699f>const </span> <span class="word" data-v-2037699f>fn</span><span class="then" data-v-2037699f>=</span> <span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt;</span> <span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>//window</span></div><div class="brackets" data-v-2037699f>}</div><span class="word" data-v-2037699f>fn</span> <span class="brackets" data-v-2037699f>()</span><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>uname:</span> <span class="src" data-v-2037699f>&quot;wayne&quot;</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>sayHi:</span><span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt; </span><span class="brackets" data-v-2037699f>{</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// window</span></div><div class="comment pFou" data-v-2037699f>// 1. { 裡面沒有 this }</div><div class="comment pFou" data-v-2037699f>// 2. 往上一層 作用域找</div><div class="comment pFou" data-v-2037699f> // 3. obj.sayHi() 是 window.obj.sayHi() </div><div class="comment pFou" data-v-2037699f>// . 是window來調用的</div><div class="comment pFou" data-v-2037699f>// this 指向 window</div><div class="brackets pTwo" data-v-2037699f>}</div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>obj.sayHi</span><span class="brackets" data-v-2037699f>()</span></div><br data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>uname:</span> <span class="src" data-v-2037699f>&quot;wayne&quot;</span></div><div class="" data-v-2037699f><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>sayHi:</span><span class="function" data-v-2037699f>function </span><span class="brackets" data-v-2037699f>(){</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="then" data-v-2037699f>this</span><span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// obj</span></div><div class="pFou" data-v-2037699f><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>10</span></div><div class="" data-v-2037699f><div class="pFou" data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>count</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{</span></div><div class="pSix" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="then" data-v-2037699f>this</span><span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// obj</span></div><div class="brackets pFou" data-v-2037699f>}</div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>count</span><span class="brackets" data-v-2037699f>()</span></div></div><div class="brackets pTwo" data-v-2037699f>}</div></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>obj.sayHi</span><span class="brackets" data-v-2037699f>()</span></div><br data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>obj</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>uname:</span> <span class="src" data-v-2037699f>&quot;wayne&quot;</span></div><div class="bor1" data-v-2037699f><span class="comment" data-v-2037699f>// 這層函數 this 指向他的調用者 obj</span><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>sayHi:</span><span class="function" data-v-2037699f>function </span><span class="brackets" data-v-2037699f>(){</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="then" data-v-2037699f>this</span><span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// obj</span></div><div class="pFou" data-v-2037699f><span class="function" data-v-2037699f>let </span> <span class="word" data-v-2037699f>i</span><span class="then" data-v-2037699f>=</span> <span class="number" data-v-2037699f>10</span></div><div class="bor2" data-v-2037699f><span class="comment" data-v-2037699f>// 這層沒有 this 往上一層找 ^</span><div class="pTwo" data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>count</span> <span class="then" data-v-2037699f>=</span><span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt;</span><span class="brackets" data-v-2037699f>{</span></div><div class="pFou" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span><span class="brackets" data-v-2037699f>(</span> <span class="then" data-v-2037699f>this</span><span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// obj</span></div><div class="brackets pTwo" data-v-2037699f>}</div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>count</span><span class="brackets" data-v-2037699f>()</span></div></div><div class="brackets pTwo" data-v-2037699f>}</div></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="word" data-v-2037699f>obj.sayHi</span><span class="brackets" data-v-2037699f>()</span></div><br data-v-2037699f><br data-v-2037699f><div data-v-2037699f><span class="function" data-v-2037699f>const </span><span class="word" data-v-2037699f>btn</span> <span class="then" data-v-2037699f>=</span><span class="word" data-v-2037699f>document.querySelector</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;.btn&quot;</span><span class="brackets" data-v-2037699f>)</span></div><span class="comment" data-v-2037699f>//普通函數指DOM對象</span><div data-v-2037699f><span class="word" data-v-2037699f>btn.addEventListener</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;click&quot;,</span><span class="function" data-v-2037699f>function</span><span class="brackets" data-v-2037699f>(){</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// btn</span></div><div class="brackets" data-v-2037699f>}</div><div data-v-2037699f><span class="comment" data-v-2037699f>// 箭頭函數 此時 this 指向 window</span></div><div data-v-2037699f><span class="word" data-v-2037699f>btn.addEventListener</span><span class="brackets" data-v-2037699f>(</span> <span class="src" data-v-2037699f>&quot;click&quot;,</span><span class="brackets" data-v-2037699f>()</span><span class="function" data-v-2037699f>=&gt; </span><span class="brackets" data-v-2037699f>{</span></div><div class="pTwo" data-v-2037699f><span class="word" data-v-2037699f>console.</span><span class="variable" data-v-2037699f>log</span> <span class="brackets" data-v-2037699f>(</span><span class="then" data-v-2037699f>this</span> <span class="brackets" data-v-2037699f>)</span><span class="comment" data-v-2037699f>// window</span></div><div class="brackets" data-v-2037699f>})</div></div><p class="fz28" data-v-2037699f> 箭頭函式(arrow function)的 this 不因為使用 call() / apply() / bind() 方法而被修改 </p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p><p class="fz28" data-v-2037699f></p>',63),Q=n(()=>a("div",{class:"toTopButton"},[a("div",{class:"disCen"},"___"),a("div",{class:"disCen"},"▲")],-1)),U=[Q],W=n(()=>a("div",{class:"toBotButton"},[a("div",{class:"disCen"},"▼"),a("div",{class:"disCen"},"￣")],-1)),X=[W],Z={__name:"JsPageThreeTwo",setup(v){const l=k(!1);window.addEventListener("scroll",function(){l.value=window.scrollY>0});function m(){window.scrollTo({top:0,left:0,behavior:"smooth"})}function u(){window.scrollTo({top:999999,left:0,behavior:"smooth"})}function t(o){window.scrollTo({top:document.getElementById(`${o}`).offsetTop,behavior:"smooth"})}return(o,s)=>{const i=h("dir");return g(),z(T,null,[a("section",null,[a("div",x,[a("div",y,[a("div",C,[a("div",{onClick:s[0]||(s[0]=p=>t("twofunction001")),class:"leftNavText"}," 函數提升 "),a("div",{onClick:s[1]||(s[1]=p=>t("twofunction002")),class:"leftNavText"}," 形參實參 "),a("div",{onClick:s[2]||(s[2]=p=>t("twofunction003")),class:"leftNavText"}," 動態參數 "),a("div",{onClick:s[3]||(s[3]=p=>t("twofunction004")),class:"leftNavText"}," 剩餘參數 "),a("div",{onClick:s[4]||(s[4]=p=>t("twofunction005")),class:"leftNavText"}," 展開運算符 "),a("div",{onClick:s[5]||(s[5]=p=>t("twofunction006")),class:"leftNavText"}," 箭頭函數 "),a("div",{onClick:s[6]||(s[6]=p=>t("")),class:"leftNavText"})])])]),a("div",j,[a("div",F,[a("div",V,[N,a("div",H,[B,c(i,{class:"pTwo"},{default:f(()=>[E,r(),M,$]),_:1}),I]),L,a("div",D,[J,c(i,null,{default:f(()=>[O,P,r(),R,Y,A]),_:1}),G]),K])])])]),a("div",null,[e(c(w,{name:"fade",tag:"div"},{default:f(()=>[a("div",{onClick:m,class:"toTop"},U)]),_:1},512),[[b,l.value]]),e(c(w,{name:"fade",tag:"div"},{default:f(()=>[a("div",{onClick:u,class:"toBot"},X)]),_:1},512),[[b,l.value]])])],64)}}},na=S(Z,[["__scopeId","data-v-2037699f"]]);export{na as default};
